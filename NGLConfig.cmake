set(NGL_Found,1)
find_package(glm CONFIG REQUIRED)
find_package(fmt CONFIG REQUIRED)
find_package(OpenImageIO CONFIG REQUIRED)
find_package(freetype CONFIG REQUIRED)
find_package(IlmBase CONFIG )
find_package(OpenEXR CONFIG )
find_path(RAPIDXML_INCLUDE_DIRS "rapidxml/rapidxml.hpp")
find_package(RapidJSON CONFIG REQUIRED)
add_compile_definitions(ADDLARGEMODELS)
add_compile_definitions(GLM_ENABLE_EXPERIMENTAL)

# see what platform we are on and set platform defines
if(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
	find_library(MACGL OpenGL)
	include_directories(include $ENV{HOME}/NGL/include)
	set(EXTRALIBS  ${MACGL})
  add_definitions(-DGL_SILENCE_DEPRICATION)
	set ( PROJECT_LINK_LIBS ${MACGL} NGL)
elseif(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
	include_directories(include $ENV{HOME}/NGL/include)
	set ( PROJECT_LINK_LIBS -lGL NGL)
elseif(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
	include_directories(include $ENV{HOMEDRIVE}/$ENV{HOMEPATH}/NGL/include)
	link_directories($ENV{HOMEDRIVE}/$ENV{HOMEPATH}/NGL/lib)	
	link_libraries($ENV{HOMEDRIVE}/$ENV{HOMEPATH}/NGL/lib/NGL.lib)
	add_compile_definitions(_USE_MATH_DEFINES)
	add_compile_definitions(NOMINMAX)
	# Need to define this when building shared library or suffer dllimport errors
	add_compile_definitions(BUILDING_DLL)
endif()

# now add NGL specific values
link_directories($ENV{HOME}/NGL/lib)

# add exe and link libs that must be after the other defines
link_libraries(OpenImageIO::OpenImageIO OpenImageIO::OpenImageIO_Util)
link_libraries( ${PROJECT_LINK_LIBS}  Qt5::Widgets fmt::fmt-header-only freetype )

if(IlmBase_Found)
    link_libraries(IlmBase::Iex IlmBase::Half IlmBase::Imath IlmBase::IexMath)
endif()
if(OpenEXR_Found)
    link_libraries(OpenEXR::IlmImf OpenEXR::IlmImfUtil OpenEXR::IlmImfConfig)
endif()
